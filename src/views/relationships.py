import random
from datetime import UTC, datetime

import humanize
from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    User as TelegramUser,
)

from callback_data import RelationshipOfferCallbackData
from models import (
    Relationship,
    RelationshipBreakUpResult,
    RelationshipCreateResult,
)
from services.users import get_username_or_fullname
from views.base import View

__all__ = (
    'RelationshipOfferView',
    'RelationshipAcceptView',
    'RelationshipBreakUpConfirmationView',
    'RelationshipBreakUpResultView',
    'RelationshipDetailView',
)


class RelationshipOfferView(View):

    def __init__(self, from_user: TelegramUser, to_user: TelegramUser):
        self.__from_user = from_user
        self.__to_user = to_user

    def get_text(self) -> str:
        return (
            f'üå± {self.__from_user.mention_html(self.__from_user.username)}'
            ' –ø—Ä–µ–¥–ª–æ–∂–∏–ª(-–∞)'
            f' {self.__to_user.mention_html(self.__to_user.username)}'
            ' –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è'
        )

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        accept_callback_data = RelationshipOfferCallbackData(
            from_user_id=self.__from_user.id,
            to_user_id=self.__to_user.id,
        ).pack()
        accept_button = InlineKeyboardButton(
            text='üíö –ü—Ä–∏–Ω—è—Ç—å',
            callback_data=accept_callback_data,
        )
        return InlineKeyboardMarkup(inline_keyboard=[[accept_button]])


class RelationshipAcceptView(View):

    def __init__(self, relationship_create_result: RelationshipCreateResult):
        self.__relationship_create_result = relationship_create_result

    def get_text(self) -> str:
        first_user_name = get_username_or_fullname(
            self.__relationship_create_result.first_user
        )
        second_user_name = get_username_or_fullname(
            self.__relationship_create_result.second_user
        )
        return (
            f'‚ù§Ô∏è {first_user_name} –∏ {second_user_name} —Ç–µ–ø–µ—Ä—å –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è'
        )


class RelationshipBreakUpConfirmationView(View):
    choices = (
        'üòî –ò–Ω–æ–≥–¥–∞ –ª—É—á—à–µ –æ—Ç–ø—É—Å—Ç–∏—Ç—å, —á–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å—Ç—Ä–∞–¥–∞—Ç—å –∏ —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –≤ '
        '–æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –≥–¥–µ —Ç—ã –Ω–µ—Å—á–∞—Å—Ç–µ–Ω.',
        'üò¢ –ñ–∏–∑–Ω—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞, —á—Ç–æ–±—ã –±—ã—Ç—å —Å –∫–µ–º-—Ç–æ, –∫—Ç–æ –Ω–µ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è '
        '–ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Å—á–∞—Å—Ç–ª–∏–≤—ã–º.',
        'üòû –ú–æ–∂–µ—Ç, –≤–∞–º –æ–±–æ–∏–º —Å—Ç–æ–∏—Ç –¥–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É —à–∞–Ω—Å –Ω–∞ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ '
        '–∏ –±—ã—Ç—å —Å —Ç–µ–º–∏, –∫—Ç–æ –≤–∞—Å —Ü–µ–Ω–∏—Ç.',
        'üòî –û—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–Ω–æ—Å—è—Ç —Ä–∞–¥–æ—Å—Ç–∏, '
        '—Ç–æ–ª—å–∫–æ –¥–µ–ª–∞–µ—Ç –±–æ–ª—å–Ω–æ –≤–∞–º –æ–±–æ–∏–º.',
        'üò¢ –ò–Ω–æ–≥–¥–∞ —Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –ª—É—á—à–µ–º—É –±—É–¥—É—â–µ–º—É –∏ –∫ '
        '–æ–±—Ä–µ—Ç–µ–Ω–∏—é —Å—á–∞—Å—Ç—å—è.',
        'üòû –ï—Å–ª–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —Ç–µ—Ä—è–µ—à—å —Å–µ–±—è –≤ —ç—Ç–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, –≤–æ–∑–º–æ–∂–Ω–æ, '
        '–ø–æ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.',
        'üòî –í—ã –æ–±–∞ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç–µ –±—ã—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º–∏, –Ω–æ –∏–Ω–æ–≥–¥–∞ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ '
        '—Ä–∞—Å—Å—Ç–∞—Ç—å—Å—è.',
        'üò¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ —Å—Å–æ—Ä—ã –∏ –Ω–µ–¥–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –º–æ–≥—É—Ç —Ä–∞–∑—Ä—É—à–∏—Ç—å –¥—É—à–µ–≤–Ω–æ–µ '
        '—Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ. –ú–æ–∂–µ—Ç, –ø–æ—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ?',
        'üòû –ï—Å–ª–∏ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –ø–æ–ª—É—á–∞–µ—à—å –ª—é–±–≤–∏, –∫–æ—Ç–æ—Ä—É—é '
        '–∑–∞—Å–ª—É–∂–∏–≤–∞–µ—à—å, –≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ä–∞ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ.',
        'üòî –ë–æ–ª—å –æ—Ç —Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π, –Ω–æ –æ–Ω–∞ –¥–∞—Å—Ç —Ç–µ–±–µ '
        '—à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é, –±–æ–ª–µ–µ —Å—á–∞—Å—Ç–ª–∏–≤—É—é –∂–∏–∑–Ω—å.',
        'üò¢ –†–∞—Å—Å—Ç–∞–≤–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –±–æ–ª—å—à–æ–π —à–∞–≥, –Ω–æ –∏–Ω–æ–≥–¥–∞ –æ–Ω –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ç–æ–≥–æ, '
        '—á—Ç–æ–±—ã –æ–±–∞ —Å—Ç–∞–ª–∏ —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ.',
    )

    def get_text(self) -> str:
        return (
            f'{random.choice(self.choices)}\n'
            '–ï—Å–ª–∏ —Ç—ã –≤—Å–µ-—Ç–∞–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å–µ—Ä—å–µ–∑–Ω–æ, —Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏:\n'
            '<code>–î–∞, —è —É–≤–µ—Ä–µ–Ω –∏ —Ö–æ—á—É —Ä–∞—Å—Å—Ç–∞—Ç—å—Å—è</code>'
        )


class RelationshipBreakUpResultView(View):

    def __init__(self, relationship_break_up_result: RelationshipBreakUpResult):
        self.__result = relationship_break_up_result

    def get_text(self) -> str:
        duration = self.__result.broke_up_at - self.__result.created_at
        humanized_duration = humanize.precisedelta(
            duration,
            minimum_unit='minutes',
            format='%0.0f',
        )
        return (
            f'üíî {get_username_or_fullname(self.__result.first_user)} –∏ '
            f'{get_username_or_fullname(self.__result.second_user)}'
            f' —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å\n'
            f'–ò—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø—Ä–æ–¥–ª–∏–ª–∏—Å—å {humanized_duration}'
            f' –∏ –¥–æ—à–ª–∏ –¥–æ {self.__result.level}-—É—Ä–æ–≤–Ω—è.'
        )


class RelationshipDetailView(View):

    def __init__(self, relationship: Relationship):
        self.__relationship = relationship

    def get_text(self) -> str:
        duration = datetime.now(UTC) - self.__relationship.created_at
        humanized_duration = humanize.precisedelta(
            duration,
            minimum_unit='minutes',
            format='%0.0f',
        )
        first_user_name = get_username_or_fullname(
            self.__relationship.first_user
        )
        second_user_name = get_username_or_fullname(
            self.__relationship.second_user
        )
        return (
            f'üë®üèø‚Äç‚ù§Ô∏è‚Äçüë®üèø –û—Ç–Ω–æ—à–µ–Ω–∏—è {first_user_name} –∏ {second_user_name}\n'
            f'‚è≥ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {humanized_duration}\n'
            f'üìä {self.__relationship.level}-—É—Ä–æ–≤–µ–Ω—å\n'
            f'‚ö°Ô∏è –ü—Ä–æ–≥—Ä–µ—Å—Å: {self.__relationship.experience}'
            f'/{self.__relationship.next_level_experience_threshold} XP'
        )
