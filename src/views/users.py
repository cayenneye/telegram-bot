from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)

from callback_data import UserUpdateCallbackData
from models import User
from views import View, InlineQueryView

__all__ = (
    'UserMenuView',
    'UserBannedInlineQueryView',
    'UserPersonalSettingsView',
)


class UserPersonalSettingsView(View):

    def __init__(self, user: User):
        self.__user = user

    def get_text(self) -> str:
        can_be_added_to_contacts_text = (
            '‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –º–µ–Ω—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã'
            if self.__user.can_be_added_to_contacts
            else '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –º–µ–Ω—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã'
        )
        can_receive_notifications_text = (
            'üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã'
            if self.__user.can_receive_notifications
            else 'üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã'
        )
        if self.__user.theme is None:
            theme_text = (
                'üåà –¢–µ–º–∞:\n'
                'üì© –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è <b>{name}</b>\n'
                'üëÄ –ü—Ä–æ—á–∏—Ç–∞—Ç—å'
            )
        else:
            theme_text = (
                'üåà –¢–µ–º–∞:\n'
                f'{self.__user.theme.secret_message_template_text}'
                f'\n{self.__user.theme.secret_message_view_button_text}'
            )
        return (
            f'{can_be_added_to_contacts_text}\n'
            f'{can_receive_notifications_text}\n'
            '\n'
            f'{theme_text}'
        )

    def get_reply_markup(self) -> InlineKeyboardMarkup:
        can_be_added_to_contacts_toggle_button_text = (
            '‚ù§Ô∏è –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã'
            if self.__user.can_be_added_to_contacts
            else 'üíö –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã'
        )
        can_receive_notifications_toggle_button_text = (
            '‚ù§Ô∏è –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
            if self.__user.can_receive_notifications
            else 'üíö –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
        )
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text=can_be_added_to_contacts_toggle_button_text,
                        callback_data=UserUpdateCallbackData(
                            field='can_be_added_to_contacts',
                        ).pack(),
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text=can_receive_notifications_toggle_button_text,
                        callback_data=UserUpdateCallbackData(
                            field='can_receive_notifications',
                        ).pack(),
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text='üé® –¢–µ–º–∞',
                        callback_data='show-themes-list',
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text='üèûÔ∏è –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è',
                        callback_data='update-profile-photo',
                    )
                ]
            ],
        )


class UserMenuView(View):
    reply_markup = ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [
                KeyboardButton(text='üì© –°–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'),
                KeyboardButton(text='üñºÔ∏è –°–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ–¥–∏–∞'),
            ],
            [
                KeyboardButton(text='üí∞ –§–∏–Ω–∞–Ω—Å—ã'),
                KeyboardButton(text='üçΩÔ∏è –ô–µ–º–µ–∫'),
            ],
            [
                KeyboardButton(text='üêæ –ö–æ—Ç–∏–∫'),
                KeyboardButton(text='üê∂ –°–æ–±–∞—á–∫–∞'),
            ],
            [
                KeyboardButton(text='üöÄ –í–æ–π—Ç–∏ –≤ OBIS'),
            ],
            [
                KeyboardButton(text='üîê –í–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'),
            ],
            [
                KeyboardButton(text='üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
                KeyboardButton(text='üë• –ö–æ–Ω—Ç–∞–∫—Ç—ã'),
            ],
        ],
    )

    def __init__(
            self,
            user: User,
            is_anonymous_messaging_enabled: bool,
            balance: int,
    ):
        self.__user = user
        self.__is_anonymous_messaging_enabled = is_anonymous_messaging_enabled
        self.__balance = balance

    def get_text(self) -> str:
        is_anonymous_messaging_enabled_emoji = (
            '‚úÖ' if self.__is_anonymous_messaging_enabled else '‚ùå'
        )
        name = self.__user.fullname
        if self.__user.profile_photo_url is not None:
            name = f'<a href="{self.__user.profile_photo_url}">{name}</a>'
        return (
            f'üôéüèø‚Äç‚ôÇÔ∏è –ò–º—è: {name}\n'
            f'üí∞ –ë–∞–ª–∞–Ω—Å: üê•${self.__balance}\n'
            'üîí –†–µ–∂–∏–º –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:'
            f' {is_anonymous_messaging_enabled_emoji}\n'
        )


class UserBannedInlineQueryView(InlineQueryView):
    title = '–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ üòî'
    description = '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @usbtypec –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏'
    text = '–Ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ –∏ –Ω–µ –º–æ–≥—É –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å üòî'
    thumbnail_url = 'https://i.imgur.com/JGgzhAI.jpg'
    thumbnail_height = 100
    thumbnail_width = 100
